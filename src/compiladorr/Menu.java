/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compiladorr;


import java.awt.Color;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.StringTokenizer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eduar
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    String ruta;
    File dir;
    String Arreglo[];
    TablaSimbolos tablas;
    int fila=0;
    AnalizadorLexico lexico= new AnalizadorLexico();
        Archivo a;
    public Menu() {
           initComponents();
           this.setLocationRelativeTo(null);
           this.setTitle("Analizador Léxico-Sintáctico");
           AreaTexto.setEnabled(true);
           AreaTexto.setText("");
           AreaLineasCont.setEnabled(true);
           dir = new File(".");
          tablas= new TablaSimbolos(this); 
          a=new Archivo();
        
    }
    //++++++++++++ Método para capturar los errores en las lineas de código+++++++++++++
    public void setErrores(String msg){
        AreaError.setText(AreaError.getText()+msg+"\n");
    }
//+++++++ Método para insertar el texto desde un archivo seleccionado
     public void insertarTexto(String ruta){   
        try {
            FileInputStream fstream = new FileInputStream(ruta);
            DataInputStream in = new DataInputStream(fstream);
            AreaTexto.setText("");
            while (in.available() != 0) {
                AreaTexto.setText(AreaTexto.getText() + in.readLine() + "\n");
            }
            in.close();
            contarFilas();
            AreaTexto.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error al introducir texto");
        }
    }
    //+++++++ Contar las lineas de código e ir mostrandolas en AreaLineasCount +++++++++++ 
     public void contarFilas(){
        int totalrows=AreaTexto.getLineCount();
            AreaLineasCont.setText("1\n");
            for(int i=2; i<=totalrows;i++){
               AreaLineasCont.setText(AreaLineasCont.getText()+i+"\n");
            }
    }
     
     public String Tokens(){  // Método para obtener las lineas del area de texto del código fuente
        int posicion=0;
        String texto2=AreaTexto.getText();
        String token2[]=texto2.split("/n");
        return texto2;  
       
     }
     
     //+++++++ Guarda todas las linas escritas en el archivo+++++++++++++
     public boolean Guardar(){
        FileOutputStream out;
        PrintStream p;
        try {
            if(ruta==null){              // Si no se selecciono un archivo se define por default la ruta
                ruta="src/compiladorr/pruebaCodigo";}
            out = new FileOutputStream(ruta);   // Se abre el archivo para escribir en el
            p = new PrintStream(out);           // Se crea el objeto para escribir en el archivo
            String texto=AreaTexto.getText();
            String[] token= texto.split("\n");
            int posicion=0;
            for(String s:token){
               p.println(s); //escribiendo lineas en el archivo
            }
            p.close(); //cierre del archivo
           
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el archivo\nNo se ha podido guardar el archivo");
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPMenu = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BtnArchivo = new javax.swing.JButton();
        BtnAnalizar = new javax.swing.JButton();
        AreaLineasCont = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaTexto = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AreaError = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtSimbolos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador Léxico - Lenguajes y Autómatas I");

        JPMenu.setBackground(java.awt.SystemColor.activeCaptionBorder);
        JPMenu.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 52, 158), 2, true));
        JPMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("Zona Codigo");

        BtnArchivo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        BtnArchivo.setText("Cargar Archivo");
        BtnArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnArchivoActionPerformed(evt);
            }
        });

        BtnAnalizar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        BtnAnalizar.setText("Analizar");
        BtnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAnalizarActionPerformed(evt);
            }
        });

        AreaLineasCont.setEditable(false);
        AreaLineasCont.setColumns(2);
        AreaLineasCont.setForeground(new java.awt.Color(102, 153, 0));
        AreaLineasCont.setLineWrap(true);
        AreaLineasCont.setRows(2);
        AreaLineasCont.setTabSize(2);
        AreaLineasCont.setText("1");
        AreaLineasCont.setAutoscrolls(false);
        AreaLineasCont.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AreaLineasCont.setCaretColor(new java.awt.Color(51, 51, 255));
        AreaLineasCont.setFocusable(false);

        AreaTexto.setColumns(20);
        AreaTexto.setLineWrap(true);
        AreaTexto.setRows(5);
        AreaTexto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AreaTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AreaTextoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AreaTextoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(AreaTexto);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Resultado");

        AreaError.setColumns(20);
        AreaError.setFont(new java.awt.Font("Arial Narrow", 2, 12)); // NOI18N
        AreaError.setForeground(new java.awt.Color(255, 51, 51));
        AreaError.setLineWrap(true);
        AreaError.setRows(5);
        AreaError.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AreaErrorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AreaErrorKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(AreaError);

        javax.swing.GroupLayout JPMenuLayout = new javax.swing.GroupLayout(JPMenu);
        JPMenu.setLayout(JPMenuLayout);
        JPMenuLayout.setHorizontalGroup(
            JPMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPMenuLayout.createSequentialGroup()
                .addGroup(JPMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPMenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AreaLineasCont, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPMenuLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPMenuLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPMenuLayout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(BtnArchivo)
                        .addGap(170, 170, 170)
                        .addComponent(BtnAnalizar)))
                .addGap(67, 152, Short.MAX_VALUE))
        );
        JPMenuLayout.setVerticalGroup(
            JPMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(JPMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addComponent(AreaLineasCont))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnAnalizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnArchivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPMenuLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPMenuLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );

        jPanel1.setBackground(java.awt.SystemColor.activeCaptionBorder);
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 52, 158), 2, true));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("TABLA DE SÍMBOLOS");

        jtSimbolos.setBackground(java.awt.SystemColor.activeCaption);
        jtSimbolos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jtSimbolos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Token", "IDg", "IDe", "Valor", "No.Linea"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtSimbolos.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(jtSimbolos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(JPMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JPMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    ArrayList<TablaSimbolos> tablaSimbolos;
    ArrayList<PilaErrores> pilaerrores;
    private void BtnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAnalizarActionPerformed
     String cabezera[]= new String[]{"Nombre","Tipo","Categoria","Valor"}; // Nombre de las columnas de la tabla
     String datos[][]={};
     DefaultTableModel modelo= new DefaultTableModel(datos,cabezera);  // Modelo de la tabla
     jtSimbolos.setModel(modelo);
     AreaError.setText("");
    if(AreaTexto.getText().isEmpty()){
        JOptionPane.showMessageDialog(null,"No hay codigo en la area de texto");
    }else{
       Guardar();
       AreaTexto.removeAll();
        a.LeerArchivo(ruta);
        tablaSimbolos=a.getArray();
        int tamano= tablaSimbolos.size();
        mostrar(tamano,tablaSimbolos);          
       }
    a.getArray().removeAll(tablaSimbolos);
      pilaerrores=a.getArrayP();
      for(PilaErrores p: pilaerrores){
          setErrores(p.error+" Token desconocido "+p.token);
      }
      if(pilaerrores.size()==0){
          setErrores("Analisis sin errores");
      }
    }//GEN-LAST:event_BtnAnalizarActionPerformed
    public void mostrar(int tamano,ArrayList<TablaSimbolos> s){
    int contador=0;
    String matriz [][]= new String [tamano][5];
    for(TablaSimbolos t:s){
        matriz[contador][0]=t.getToken();
        JOptionPane.showMessageDialog(null, t.getToken());
        matriz[contador][1]=t.getClaveGeneral()+"";
        matriz[contador][2]=t.getClaveEspecifica()+"";
        matriz[contador][3]="";
        matriz[contador][4]=""+t.getlinea();
        contador++;
      
    }
    jtSimbolos.setModel(new javax.swing.table.DefaultTableModel(
            matriz,
            new String[]{
                "Token","IDg","IDe","Valor","Linea"
            }
    ));
    }
    private void BtnArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnArchivoActionPerformed
        try {
            JFileChooser file = new JFileChooser();
            file.showOpenDialog(file);
            File abre = file.getSelectedFile();
            ruta=abre.toString();
            insertarTexto(ruta);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al leer el archivo vuelve a cargar el archivo");
        }
    }//GEN-LAST:event_BtnArchivoActionPerformed

    private void AreaTextoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AreaTextoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AreaTextoKeyPressed

    private void AreaTextoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AreaTextoKeyReleased
        // TODO add your handling code here:
        // Al presionar la tecla enter se aumentan las filas 
        if (evt.isControlDown() || evt.getKeyCode() == 10 || evt.getKeyCode() == 8 || evt.getKeyCode() == 127) {
            contarFilas();
        }
    }//GEN-LAST:event_AreaTextoKeyReleased

    private void AreaErrorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AreaErrorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AreaErrorKeyPressed

    private void AreaErrorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AreaErrorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_AreaErrorKeyReleased
 
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
   this.setBackground(Color.yellow);
    }//GEN-LAST:event_jPanel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea AreaError;
    public javax.swing.JTextArea AreaLineasCont;
    public static javax.swing.JTextArea AreaTexto;
    private javax.swing.JButton BtnAnalizar;
    private javax.swing.JButton BtnArchivo;
    private javax.swing.JPanel JPMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtSimbolos;
    // End of variables declaration//GEN-END:variables
}
